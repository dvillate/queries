include: "/business_intelligence/_base_views/snowflake_monitoring/query_history_enriched.view.lkml"

view: +query_history_enriched {

  dimension: bi_usage_groups {
    type: string
    sql:
    case
      when ${user_name} = 'DATAFOLD' then 'Datafold'
      when ${user_name} = 'DBT_CLOUD' then 'dbt'
      when ${user_name} = 'LOOKER_USER' then 'Looker'
      when ${user_name} in ('AMATA_LEE','CAMDEN_LEE','CHRIS_TUFFY','DANIEL_VILLATE') then 'Users'
    else 'Other' end;;
    label: "BI Usage Groups"
    description: "Buckets users into appropriate BI groupings"
  }

  dimension: is_bi_usage {
    type: yesno
    sql:
      case
        when ${bi_usage_groups} != 'Other' then true
      else false end;;
    label: "Is BI Usage"
    description: "Indicates whether the query was generated by a BI team member or by a product owned by the BI team"
  }

  dimension: looker_query_buckets {
    type: string
    sql:
    case
      when ${user_name} = 'LOOKER_USER' and lower(${query_text_no_comments}) ilike '%sms_sales%' and lower(${query_text_no_comments}) ilike 'with%'  then 'SMS Sales Derived Table'
      when ${user_name} = 'LOOKER_USER' and lower(${query_text_no_comments}) ilike 'with%'  then 'Derived Table'
      when ${user_name} = 'LOOKER_USER' and lower(${query_text_no_comments}) ilike '%_fondue_ab%' then 'Fondue PDT'
      when ${user_name} = 'LOOKER_USER' and lower(${query_text_no_comments}) ilike '%_sent_messages_sent_messages_daily%' then 'Sent Messages PDT'
      when ${user_name} = 'LOOKER_USER' and lower(${query_text_no_comments}) ilike '%information_schema.schemata%' then 'Metadata Query'
      when ${user_name} = 'LOOKER_USER' and lower(${query_text_no_comments}) ilike '%create table looker_bi_prod%' then 'PDT'
      when ${user_name} = 'LOOKER_USER' then 'Regular Usage'
    else null end;;
  }

  ## Measures
  measure: query_count {
    type: count_distinct
    sql: ${surrogate_key} ;;
  }

  measure: total_query_cost {
    type: sum
    sql: ${query_cost} ;;
    value_format_name: usd
  }

  measure: total_execution_time_s {
    type: sum
    sql: ${execution_time_s} ;;
    value_format_name: decimal_2
  }

  measure: total_elapsed_time_s {
    type: sum
    sql: ${elapsed_time_s} ;;
    value_format_name: decimal_2
  }

  measure: total_queued_overload_time_s {
    type: sum
    sql: ${queued_overload_time_s} ;;
    value_format_name: decimal_2
  }

  measure: total_queued_repair_time_s {
    type: sum
    sql: ${queued_repair_time_s} ;;
    value_format_name: decimal_2
  }

  measure: total_data_spilled_to_local_storage_gb {
    type: sum
    sql: ${data_spilled_to_local_storage_gb} ;;
    value_format_name: decimal_2
  }

  measure: total_data_spilled_to_remote_storage_gb {
    type: sum
    sql: ${data_spilled_to_remote_storage_gb} ;;
    value_format_name: decimal_2
  }

  measure: total_rows_produced {
    type: sum
    sql: ${rows_produced} ;;
    value_format_name: decimal_2
  }

  measure: recommended_wh_size_by_execution {
    type: string
    sql:
    case
      when ${total_execution_time_s} < 60 then 'XS'
      when ${total_execution_time_s} >= 60 and ${total_execution_time_s} < 300 then 'S'
      when ${total_execution_time_s} >= 300 and ${total_execution_time_s} < 900 then 'M'
      when ${total_execution_time_s} >= 900 and ${total_execution_time_s} < 1800 then 'L'
      when ${total_execution_time_s} >= 1800 and ${total_execution_time_s} < 3600 then 'XL'
    else 'XL+' end;;
    group_label: "Recommendations"
  }

  measure: recommended_wh_size_by_size {
    type: string
    sql:
    case
      when ${total_rows_produced} < 1000000 then 'XS'
      when ${total_rows_produced} >= 1000000 and ${total_rows_produced} < 10000000 then 'S'
      when ${total_rows_produced} >= 10000000 and ${total_rows_produced} < 100000000 then 'M'
      when ${total_rows_produced} >= 100000000 and ${total_rows_produced} < 1000000000 then 'L'
      when ${total_rows_produced} >= 1000000000 then 'XL'
    else 'XL+' end;;
    group_label: "Recommendations"
  }

  measure: model_efficiency {
    type: string
    sql:
    case
      when ${total_data_spilled_to_local_storage_gb} = 0 and ${total_data_spilled_to_remote_storage_gb} = 0 then 'Good'
      when (${total_data_spilled_to_local_storage_gb} > 0 and ${total_data_spilled_to_local_storage_gb} <= 5) and ${total_data_spilled_to_remote_storage_gb} = 0 then 'Acceptable'
      when ${total_data_spilled_to_local_storage_gb} > 5 and ${total_data_spilled_to_remote_storage_gb} = 0 then 'Poor'
      when ${total_data_spilled_to_remote_storage_gb} > 0 then 'Very Poor'
    else 'Very Poor' end;;
    group_label: "Recommendations"
  }

}
